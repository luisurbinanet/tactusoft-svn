package co.com.tactusoft.video.model.entities;

// Generated 5/04/2012 10:45:54 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import co.com.tactusoft.video.util.Constant;
import co.com.tactusoft.video.util.FacesUtil;
import co.com.tactusoft.video.view.backing.ParameterBacking;

/**
 * VidQuestion generated by hbm2java
 */
@Entity
@Table(name = "vid_question", catalog = "medical_video_db")
public class VidQuestion implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private BigDecimal id;
	private VidTopic vidTopic;
	private String name;
	private String questionType;
	private String audioType;
	private String audio;
	private String videoType;
	private String video;
	private BigDecimal positive;
	private BigDecimal negative;
	private int orderQuestion;
	private Set<VidAnswer> vidAnswers = new HashSet<VidAnswer>(0);

	public VidQuestion() {
	}

	public VidQuestion(BigDecimal id, VidTopic vidTopic, String name,
			String questionType, int orderQuestion) {
		this.id = id;
		this.vidTopic = vidTopic;
		this.name = name;
		this.questionType = questionType;
		this.orderQuestion = orderQuestion;
	}

	public VidQuestion(BigDecimal id, VidTopic vidTopic, String name,
			String questionType, String audioType, String audio,
			String videoType, String video, BigDecimal positive,
			BigDecimal negative, int orderQuestion, Set<VidAnswer> vidAnswers) {
		this.id = id;
		this.vidTopic = vidTopic;
		this.name = name;
		this.questionType = questionType;
		this.audioType = audioType;
		this.audio = audio;
		this.videoType = videoType;
		this.video = video;
		this.positive = positive;
		this.negative = negative;
		this.orderQuestion = orderQuestion;
		this.vidAnswers = vidAnswers;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_topic", nullable = false)
	public VidTopic getVidTopic() {
		return this.vidTopic;
	}

	public void setVidTopic(VidTopic vidTopic) {
		this.vidTopic = vidTopic;
	}

	@Column(name = "name", nullable = false, length = 65535)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "question_type", nullable = false, length = 45)
	public String getQuestionType() {
		return this.questionType;
	}

	public void setQuestionType(String questionType) {
		this.questionType = questionType;
	}

	@Column(name = "audio_type", length = 15)
	public String getAudioType() {
		return this.audioType;
	}

	public void setAudioType(String audioType) {
		this.audioType = audioType;
	}

	@Column(name = "audio")
	public String getAudio() {
		if (this.audio == null) {
			return "../../media/default.m4a";
		} else {
			ParameterBacking parameterBacking = FacesUtil
					.findBean("parameterBacking");
			String urlImages = parameterBacking.getUrlImages();
			return urlImages + this.audio;
		}
	}

	public void setAudio(String audio) {
		this.audio = audio;
	}

	@Column(name = "video_type", length = 45)
	public String getVideoType() {
		return this.videoType;
	}

	public void setVideoType(String videoType) {
		this.videoType = videoType;
	}

	@Column(name = "video")
	public String getVideo() {
		if (this.video == null) {
			return "../../media/default.m4a";
		} else {
			ParameterBacking parameterBacking = FacesUtil
					.findBean("parameterBacking");
			String urlImages = parameterBacking.getUrlImages();
			return urlImages + this.video;
		}
	}

	public void setVideo(String video) {
		this.video = video;
	}

	@Column(name = "positive", scale = 0)
	public BigDecimal getPositive() {
		return this.positive;
	}

	public void setPositive(BigDecimal positive) {
		this.positive = positive;
	}

	@Column(name = "negative", scale = 0)
	public BigDecimal getNegative() {
		return this.negative;
	}

	public void setNegative(BigDecimal negative) {
		this.negative = negative;
	}

	@Column(name = "order_question", nullable = false)
	public int getOrderQuestion() {
		return this.orderQuestion;
	}

	public void setOrderQuestion(int orderQuestion) {
		this.orderQuestion = orderQuestion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vidQuestion")
	public Set<VidAnswer> getVidAnswers() {
		return this.vidAnswers;
	}

	public void setVidAnswers(Set<VidAnswer> vidAnswers) {
		this.vidAnswers = vidAnswers;
	}

	@Transient
	public String getDetType() {
		String detType = null;

		if (questionType.equals(Constant.QUESTION_TYPE_MESSAGE)) {
			detType = FacesUtil.getMessage("que_type_message");
		} else if (questionType.equals(Constant.QUESTION_TYPE_ASSERTIVE)) {
			detType = FacesUtil.getMessage("que_type_assertive");
		} else if (questionType.equals(Constant.QUESTION_TYPE_UNIQUE)) {
			detType = FacesUtil.getMessage("que_type_unique");
		}

		return detType;
	}

}
