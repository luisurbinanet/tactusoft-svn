<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions">

<ui:composition template="../layout/main.xhtml">
	<ui:define name="content">

		<div class="rco-blockheader">
			<div class="l"></div>
			<div class="r"></div>
			<div class="t">#{msg['title_video']}</div>
		</div>

		<p:spacer height="50" />

		<h:form id="form" enctype="multipart/form-data">

			<p:panelGrid id="pnlQuestion" style="width:100%" columns="1"
				styleClass="actions">

				<f:facet name="header">
					<h:outputLabel value="#{msg['title_config_video']}"
						style="font-style:normal;font-size:18px;width:100%;font-weight:bold;" />
				</f:facet>

				<p:spacer height="5" />

				<h:panelGrid columns="1" width="100%" style="text-align:center;">
					<h:outputLabel
						value="#{responseQuestionBacking.selectedQuestion.questionType eq 'ASSERTIVE'?'Â¿':''} #{responseQuestionBacking.selectedQuestion.name} #{responseQuestionBacking.selectedQuestion.questionType eq 'ASSERTIVE'?'?':''}"
						style="color:Blue;font-style:normal;font-size:18px;width:100%;font-weight:bold;" />
				</h:panelGrid>

				<h:panelGrid id="pnlOk" columns="1"
					rendered="#{responseQuestionBacking.selectedQuestion.questionType ne 'MESSAGE'?true:false}"
					styleClass="actions-center" width="100%">

					<h:commandButton id="btnOncuepoint"
						action="#{responseQuestionBacking.onCuepoint}"
						style="display: none" />

					<h:outputLink id="playerVideo"
						style="display: block; width: 940px; height: 500px; text-align:center;" />

					<h:outputLink id="playerAudio"
						style="display: block; width: 940px; height: 30px; text-align:center;"
						value="#{responseQuestionBacking.selectedQuestion.urlAudio}" />

					<script type="text/javascript">

						var pVideo = document.getElementById("form:playerVideo");
						var pAudio = document.getElementById("form:playerAudio");

						var pBtnOncuepoint = document.getElementById("form:btnOncuepoint");

  						$f("form:playerVideo", "../../flowplayer/flowplayer-3.2.9.swf", {
      		      			 
      		      		    plugins: {
      		      		        controls: null
      		      		    },
      		      		 
      		      		    clip: {
      		      		    	url : '#{responseQuestionBacking.selectedQuestion.urlVideo}',
      		      		    	
      		      		        onBeforeBegin: function() {
      		      		        	var obj = arguments[0];
  		      		        		var url = obj.url;
  		      		        		if (url.indexOf('default.m4a') >= 0){
  		      		        			pVideo.style.display = 'none';
      		      		        	} else {
      		      		        		autoPlay: true;
          		      		    	}      		      		          
      		      		        },

      		      		    	onCuepoint: [[#{responseQuestionBacking.cuePoints}], function(clip, point) {
      		      		    		console.log('#{responseQuestionBacking.urlVideo}');
      		      		    		pBtnOncuepoint.click();
      		              		}]
      		      		    }
      		      		 
      		      		});

      					$f("form:playerAudio", "../../flowplayer/flowplayer-3.2.9.swf", {
     		      			 
      		      		    plugins: {
      		      		        controls: {
      		      		            fullscreen: false,
      		      		            height: 30,
      		      		            autoHide: false
      		      		        }
      		      		    },
      		      		 
      		      		    clip: {
      		      		        // optional: when playback starts close the first audio playback
      		      		        onBeforeBegin: function() {
      		      		        	var obj = arguments[0];
      		      		        	var url = obj.url;
      		      		        	if (url.indexOf('default.m4a') >= 0){
      		      		        		pAudio.style.display = 'none';
          		      		        } else {
          		      		        	autoPlay: true;
              		      		    }
      		      		        }
      		      		    }
      		      		});
      		      		
      					
    				</script>

				</h:panelGrid>

				<h:panelGrid id="pnlAnswers" columns="2" rowClasses="actions-center"
					rendered="#{responseQuestionBacking.selectedQuestion.questionType eq 'ASSERTIVE'?true:false}"
					width="100%">
					<p:commandButton value="#{msg['que_ans_yes']}"
						actionListener="#{responseQuestionBacking.actionSubmit}"
						update="pnlQuestion" style="width:120px" accesskey="n">
						<f:param name="answer" value="#{msg['que_ans_yes']}" />
					</p:commandButton>
					<p:commandButton value="#{msg['que_ans_no']}"
						actionListener="#{responseQuestionBacking.actionSubmit}"
						update="pnlQuestion" style="width:120px" accesskey="s">
						<f:param name="answer" value="#{msg['que_ans_no']}" />
					</p:commandButton>

					<p:hotkey bind="s" update="pnlQuestion"
						onsuccess="keyPressRemoteAssertive('s');" />

					<p:hotkey bind="n" update="pnlQuestion"
						onsuccess="keyPressRemoteAssertive('n');" />

					<pe:remoteCommand name="keyPressRemoteAssertive"
						update=":form:pnlQuestion"
						action="#{responseQuestionBacking.actionSubmitKeyAssertive}">
						<pe:remoteCommandParameter name="KEY"
							applyTo="#{responseQuestionBacking.enterKey}" />
					</pe:remoteCommand>

				</h:panelGrid>

				<h:panelGrid id="pnlUnique" columns="2" rowClasses="actions-center"
					rendered="#{responseQuestionBacking.selectedQuestion.questionType eq 'UNIQUE'?true:false}"
					width="100%">

					<p:selectOneRadio id="options"
						value="#{responseQuestionBacking.idAnswer}" layout="pageDirection"
						style="font-style:normal;font-size:18px;">
						<f:selectItems value="#{responseQuestionBacking.listAnswer}"
							var="item" itemLabel="#{item.name} (Tecla #{item.enterKey})"
							itemValue="#{item.id}" />
					</p:selectOneRadio>

					<ui:repeat var="row" value="#{responseQuestionBacking.listAnswer}">
						<p:hotkey bind="#{row.enterKey}"
							onsuccess="keyPressRemote('#{row.enterKey}');" />
					</ui:repeat>

					<pe:remoteCommand name="keyPressRemote" update=":form:pnlQuestion"
						action="#{responseQuestionBacking.actionSubmitKeyUnique}">
						<pe:remoteCommandParameter name="KEY"
							applyTo="#{responseQuestionBacking.enterKey}" />
					</pe:remoteCommand>

				</h:panelGrid>

				<h:panelGrid id="pnlOkUnique" columns="1"
					rendered="#{responseQuestionBacking.selectedQuestion.questionType ne 'UNIQUE'?false:true}"
					styleClass="actions-center" width="100%">

					<p:commandButton value="#{msg['btn_next']}"
						action="#{responseQuestionBacking.actionSubmit}"
						update="pnlQuestion" style="width:120px">
						<f:param name="answer" value="UNIQUE" />
					</p:commandButton>

				</h:panelGrid>

				<h:panelGrid id="pnlMessage" columns="1"
					rendered="#{responseQuestionBacking.selectedQuestion.questionType ne 'MESSAGE'?false:true}"
					styleClass="actions-center" width="100%">

					<p:spacer height="20" />

					<p:commandButton value="#{msg['btn_ok']}"
						action="#{responseQuestionBacking.returnAction}" />
				</h:panelGrid>

			</p:panelGrid>

		</h:form>

		<h:panelGroup layout="block" style="height:200px;" />

	</ui:define>
</ui:composition>
</html>