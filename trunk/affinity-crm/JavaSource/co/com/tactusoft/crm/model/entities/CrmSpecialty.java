package co.com.tactusoft.crm.model.entities;

// Generated 19/04/2012 10:54:42 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * CrmSpecialty generated by hbm2java
 */
@Entity
@Table(name = "crm_specialty", catalog = "crm_db", uniqueConstraints = @UniqueConstraint(columnNames = "code"))
public class CrmSpecialty implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private BigDecimal id;
	private String code;
	private String description;
	private Set<CrmDoctor> crmDoctors = new HashSet<CrmDoctor>(0);

	public CrmSpecialty() {
	}

	public CrmSpecialty(BigDecimal id, String description) {
		this.id = id;
		this.description = description;
	}

	public CrmSpecialty(BigDecimal id, String code, String description,
			Set<CrmDoctor> crmDoctors) {
		this.id = id;
		this.code = code;
		this.description = description;
		this.crmDoctors = crmDoctors;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@Column(name = "code", unique = true, length = 45)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "crmSpecialty")
	public Set<CrmDoctor> getCrmDoctors() {
		return this.crmDoctors;
	}

	public void setCrmDoctors(Set<CrmDoctor> crmDoctors) {
		this.crmDoctors = crmDoctors;
	}

}
