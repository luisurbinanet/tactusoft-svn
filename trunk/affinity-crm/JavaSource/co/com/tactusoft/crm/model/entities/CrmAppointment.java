package co.com.tactusoft.crm.model.entities;

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * CrmAppointment generated by hbm2java
 */
@Entity
@Table(name = "crm_appointment", catalog = "crm_db", uniqueConstraints = @UniqueConstraint(columnNames = "code"))
public class CrmAppointment implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private BigDecimal id;
	private CrmProcedureDetail crmProcedureDetail;
	private CrmPatient crmPatient;
	private CrmBranch crmBranch;
	private CrmDoctor crmDoctor;
	private String code;
	private String patientNames;
	private String patientSap;
	private Date startAppointmentDate;
	private Date endAppointmentDate;
	private String codPublicity;
	private String namePublicity;
	private String obs;
	private Boolean untimely;
	private int state;

	public CrmAppointment() {
	}

	public CrmAppointment(BigDecimal id, CrmProcedureDetail crmProcedureDetail,
			CrmPatient crmPatient, CrmBranch crmBranch, CrmDoctor crmDoctor,
			String code, Date startAppointmentDate, Date endAppointmentDate,
			int state) {
		this.id = id;
		this.crmProcedureDetail = crmProcedureDetail;
		this.crmPatient = crmPatient;
		this.crmBranch = crmBranch;
		this.crmDoctor = crmDoctor;
		this.code = code;
		this.startAppointmentDate = startAppointmentDate;
		this.endAppointmentDate = endAppointmentDate;
		this.state = state;
	}

	public CrmAppointment(BigDecimal id, CrmProcedureDetail crmProcedureDetail,
			CrmPatient crmPatient, CrmBranch crmBranch, CrmDoctor crmDoctor,
			String code, String patientNames, String patientSap,
			Date startAppointmentDate, Date endAppointmentDate,
			String codPublicity, String namePublicity, String obs,
			Boolean untimely, int state) {
		this.id = id;
		this.crmProcedureDetail = crmProcedureDetail;
		this.crmPatient = crmPatient;
		this.crmBranch = crmBranch;
		this.crmDoctor = crmDoctor;
		this.code = code;
		this.patientNames = patientNames;
		this.patientSap = patientSap;
		this.startAppointmentDate = startAppointmentDate;
		this.endAppointmentDate = endAppointmentDate;
		this.codPublicity = codPublicity;
		this.namePublicity = namePublicity;
		this.obs = obs;
		this.untimely = untimely;
		this.state = state;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_procedure_detail", nullable = false)
	public CrmProcedureDetail getCrmProcedureDetail() {
		return this.crmProcedureDetail;
	}

	public void setCrmProcedureDetail(CrmProcedureDetail crmProcedureDetail) {
		this.crmProcedureDetail = crmProcedureDetail;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_patient", nullable = false)
	public CrmPatient getCrmPatient() {
		return this.crmPatient;
	}

	public void setCrmPatient(CrmPatient crmPatient) {
		this.crmPatient = crmPatient;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_branch", nullable = false)
	public CrmBranch getCrmBranch() {
		return this.crmBranch;
	}

	public void setCrmBranch(CrmBranch crmBranch) {
		this.crmBranch = crmBranch;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_doctor", nullable = false)
	public CrmDoctor getCrmDoctor() {
		return this.crmDoctor;
	}

	public void setCrmDoctor(CrmDoctor crmDoctor) {
		this.crmDoctor = crmDoctor;
	}

	@Column(name = "code", unique = true, nullable = false, length = 45)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "patient_names", length = 1000)
	public String getPatientNames() {
		return this.patientNames;
	}

	public void setPatientNames(String patientNames) {
		this.patientNames = patientNames;
	}

	@Column(name = "patient_sap", length = 45)
	public String getPatientSap() {
		return this.patientSap;
	}

	public void setPatientSap(String patientSap) {
		this.patientSap = patientSap;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_appointment_date", nullable = false, length = 19)
	public Date getStartAppointmentDate() {
		return this.startAppointmentDate;
	}

	public void setStartAppointmentDate(Date startAppointmentDate) {
		this.startAppointmentDate = startAppointmentDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_appointment_date", nullable = false, length = 19)
	public Date getEndAppointmentDate() {
		return this.endAppointmentDate;
	}

	public void setEndAppointmentDate(Date endAppointmentDate) {
		this.endAppointmentDate = endAppointmentDate;
	}

	@Column(name = "cod_publicity", length = 45)
	public String getCodPublicity() {
		return this.codPublicity;
	}

	public void setCodPublicity(String codPublicity) {
		this.codPublicity = codPublicity;
	}

	@Column(name = "name_publicity", length = 1000)
	public String getNamePublicity() {
		return this.namePublicity;
	}

	public void setNamePublicity(String namePublicity) {
		this.namePublicity = namePublicity;
	}

	@Column(name = "obs", length = 65535)
	public String getObs() {
		return this.obs;
	}

	public void setObs(String obs) {
		this.obs = obs;
	}

	@Column(name = "untimely")
	public Boolean getUntimely() {
		return this.untimely;
	}

	public void setUntimely(Boolean untimely) {
		this.untimely = untimely;
	}

	@Column(name = "state", nullable = false)
	public int getState() {
		return this.state;
	}

	public void setState(int state) {
		this.state = state;
	}

}
